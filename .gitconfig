#
# .gitconfig
#
[user]
  name = Yuta Shimizu
  email = shimizu0391@gmail.com
[core]
  excludesfile = ~/.gitignore
  editor = /usr/bin/vim
	quotepath = false
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[push]
  default = simple
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
[alias]
  s   = status
  st  = status
  ss  = status -s
  sh  = show
  so  = remote show origin
  # pull/push/fetch
  ft  = fetch
  ftp = fetch --prune
  up  = pull --rebase       # pull rebase
  po  = push origin         # push origin
  pof = push -f origin      # force
  pu  = push -u origin      # push origin and set upstream
  # push current branch to origin with --upstream
  puc = "!f() { git push origin -u `git symbolic-ref --short HEAD` ;}; f"
  # rebase
  rbm = rebase --merge master       # masterへのrebaseはよく使うのでalias
  rbd = rebase --merge develop
  rbc = rebase --continue
  rba = rebase --abort
  rbi = rebase -i
  rbi1 = rebase -i HEAD^
  rbi2 = rebase -i HEAD^^
  rbi3 = rebase -i HEAD^^^
  rbi4 = rebase -i HEAD^^^^
  rbi5 = rebase -i HEAD^^^^^
  # merge
  mn  = merge --no-ff
  rebase-and-merge = "!f() { git checkout $2 && git rebase --merge --no-ff $1 && git checkout $1 && git merge --no-ff $2 && echo '' && echo \"branch $2 is rebased onto $1 and merged into $1\"; }; f"
  ram = "!f() { git rebase-and-merge $1 $2 ;}; f"
  # comit
  ad  = add
  c   = commit
  ci  = commit -a           # modifiedなファイルを全てstageへ
  cam = commit -a --amend   # 直前のcommitを修正
  cmm = commit -m
  co  = checkout
  cb  = checkout -b         # branch切ってcheckoutする
  ct  = checkout --track    # remoteのbranchを追跡
  cm  = checkout master
  cd  = checkout develop
  # branch関連
  br  = branch
  ba  = branch -a           # originも含めた全てのbranchを表示
  bm  = branch --merged     # merge済みのbranchを表示
  bn  = branch --no-merged  # mergeしてないbranchを表示
  bo  = branch -r           # remote branchを表示
  # log
  wc = whatchanged
  ls = log --stat
  lp = log -p
  lr = log origin
  # log tree
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  # diff
  dm = diff master
  dw = diff --color-words
  dc = diff --cached
